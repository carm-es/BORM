######################################################################
#Configuración para el cliente TSA Java Completo SIN Interfaz Gráfica#
######################################################################

#Identificador de la aplicación cliente
ident.aplicacion=carm.web_borm

#Configuración de autenticación Web-Services (OASIS-DSS). Podría tomar los valores: 
#FirmaSOAP (autenticación mediante certificado) y user_password (autenticación mediante usuario y contraseña)
mecanismo.autentificacion=FirmaSOAP

#Mecanismo de inclusión del certificado. Podría tener uno de los siguiente valores: Direct, Identifier y IssuerSerialNumber
mecanismo.inclusion=Direct

#Configuración general de confianza para los servicios por HTTPS: RFC3161+HTTPS (puerto 8443) y Web-Services por HTTPS (puerto 443)
#Este certificado debe ser el certificado SSL de servidor la TSA (parte pública)
location.trustkeystore='pathks'
password.trustkeystore='passks'

#########################################
#Configuración servicios Web (OASIS-DSS)#
#########################################

#Ruta al wsdl de los servicios Web ofrecidos por la TSA 
wsdl.servicios=https://tsafirma.redsara.es/tsamap/CreateTimeStampWS?wsdl

#CERT
location.cert.ws='selloBorm'
password.cert.ws='passCert'
nombre.cert.ws='nameCert'

#Configuración adicional de cifrado simétrico (opcional)
#NOTA: la clave debe establecerse en la configuracion de la aplicacion y, por tanto, debe darse de alta previamente en la TSA por parte de soporte
#Clave simétrica para cifrar/descifrar el mensaje SOAP
clave.simetrica='claveSime'
clave.simetrica.alias= 'alias'

#Indica si se quiere securizar los mensajes mediante SAML
usar.saml=NO